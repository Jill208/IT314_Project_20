Index: IT314_Project_20/templates/Admin/admin.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% load static %}\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n  <title>Admin Dashboard</title>\r\n  <style>\r\n    body {\r\n      font-family: Arial, sans-serif;\r\n      background-color: #fff;\r\n    }\r\n\r\n    .container {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      padding: 40px;\r\n      background-color: #fff;\r\n      box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\r\n      border-radius: 5px;\r\n    }\r\n\r\n    h1 {\r\n      text-align: center;\r\n      margin-bottom: 30px;\r\n      color: #010810;\r\n    }\r\n\r\n    .logo {\r\n      text-align: center;\r\n      margin-bottom: 30px;\r\n    }\r\n\r\n    .logo img {\r\n      max-width: 100px;\r\n    }\r\n\r\n    .button-container {\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    .button-container button {\r\n      padding: 15px 30px;\r\n      font-size: 18px;\r\n      font-weight: bold;\r\n      background-color: #0056b3;\r\n      color: #fff;\r\n      border: none;\r\n      border-radius: 5px;\r\n      margin: 0 10px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .button-container button:hover {\r\n      background-color: #0056b3;\r\n    }\r\n\r\n    .footer {\r\n      margin-top: 30px;\r\n      text-align: center;\r\n    }\r\n\r\n    .footer a {\r\n      color: #007bff;\r\n      text-decoration: none;\r\n    }\r\n  </style>\r\n</head>\r\n\r\n<body>\r\n  <div class=\"container\">\r\n    <h1>Admin Dashboard</h1>\r\n\r\n    <div class=\"button-container\">\r\n      <button onclick=\"goToUserList()\">User List</button>\r\n      <button onclick=\"goToCrosswordList()\">Crossword List</button>\r\n    </div>\r\n  </div>\r\n  <script>\r\n    function goToUserList() {\r\n      // Redirect to User List page\r\n      window.location.href = \"/admin/userList\";\r\n    }\r\n\r\n    function goToCrosswordList() {\r\n      // Redirect to Crossword List page\r\n      window.location.href = \"crosswordlist.html\";\r\n    }\r\n  </script>\r\n</body>\r\n\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IT314_Project_20/templates/Admin/admin.html b/IT314_Project_20/templates/Admin/admin.html
--- a/IT314_Project_20/templates/Admin/admin.html	(revision 2f96f6fc5d5466e2e669cee721544020e720b120)
+++ b/IT314_Project_20/templates/Admin/admin.html	(date 1681726616402)
@@ -81,7 +81,7 @@
   <script>
     function goToUserList() {
       // Redirect to User List page
-      window.location.href = "/admin/userList";
+      window.location.href = "admin/userList";
     }
 
     function goToCrosswordList() {
Index: IT314_Project_20/crosswordApp/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"CrosswordManagement URL Configuration\r\n\r\nThe `urlpatterns` list routes URLs to views. For more information please see:\r\n    https://docs.djangoproject.com/en/4.1/topics/http/urls/\r\nExamples:\r\nFunction views\r\n    1. Add an import:  from my_app import views\r\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\r\nClass-based views\r\n    1. Add an import:  from other_app.views import Home\r\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\r\nIncluding another URLconf\r\n    1. Import the include() function: from django.urls import include, path\r\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\r\n\"\"\"\r\nfrom django.contrib import admin\r\nfrom django.urls import path, include\r\n\r\nfrom crosswordApp import views\r\n\r\nurlpatterns = [\r\n    path(\"login/\", views.LoginPage, name=\"login\"),\r\n    path(\"signup/\",views.SignupPage, name='signup'),\r\n    path(\"create_crossword/\", views.create_crossword, name=\"create_crossword\"),\r\n    path(\"unicorn/\", include(\"django_unicorn.urls\")),\r\n    path(\"crossword_list_view/\", views.crossword_list_view, name=\"crossword_list_view\"),\r\n    path(\"create_crossword_automatic/\", views.create_crossword_automatic, name=\"create_crossword_automatic\"),\r\n    path(\"create_crossword_manual/\", views.create_crossword_manual, name=\"create_crossword_manual\"),\r\n    path(\"creation\", views.creation, name=\"creation\"),\r\n    path(\"\",views.home, name=\"home\"),\r\n    path(\"logout/\", views.logout, name=\"logout\"),\r\n    path(\"creatorProfile/\", views.creatorProfile, name=\"creatorProfile\"),\r\n    path(\"admin\", views.adminPage, name=\"adminPage\"),\r\n    # path(\"admin/crosswordList/<int:crossword_id>/\", views.AdminCrosswordListPage, name=\"AdminCrosswordListPage\"),\r\n    path(\"admin/crosswordList\", views.AdminCrosswordListPage, name=\"AdminCrosswordListPage\"),\r\n    # path(\"admin/crosswordList/<int:crossword_id>/delete/\", views.AdminCrosswordDelete, name=\"AdminCrosswordDeletePage\"),\r\n    path(\"admin/userList\", views.AdminUserListPage, name=\"AdminUserListPage\"),\r\n    # path(\"admin/userList/<int:user_id>/\", views.AdminUserListPage, name=\"AdminUserListPage\"),\r\n    path(\"admin/modifyUserRequest/<str:username>/\", views.ProcessModifyUserRequest, name=\"ProcessModifyUserRequest\"),\r\n    path('forget_password/', views.forget_password, name='forget_password'),\r\n    path('change-password/<token>/<email>/', views.ChangePassword, name=\"change_password\"),\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IT314_Project_20/crosswordApp/urls.py b/IT314_Project_20/crosswordApp/urls.py
--- a/IT314_Project_20/crosswordApp/urls.py	(revision 2f96f6fc5d5466e2e669cee721544020e720b120)
+++ b/IT314_Project_20/crosswordApp/urls.py	(date 1682072258534)
@@ -20,14 +20,14 @@
 
 urlpatterns = [
     path("login/", views.LoginPage, name="login"),
-    path("signup/",views.SignupPage, name='signup'),
+    path("signup/", views.SignupPage, name='signup'),
     path("create_crossword/", views.create_crossword, name="create_crossword"),
     path("unicorn/", include("django_unicorn.urls")),
     path("crossword_list_view/", views.crossword_list_view, name="crossword_list_view"),
     path("create_crossword_automatic/", views.create_crossword_automatic, name="create_crossword_automatic"),
     path("create_crossword_manual/", views.create_crossword_manual, name="create_crossword_manual"),
     path("creation", views.creation, name="creation"),
-    path("",views.home, name="home"),
+    path("", views.home, name="home"),
     path("logout/", views.logout, name="logout"),
     path("creatorProfile/", views.creatorProfile, name="creatorProfile"),
     path("admin", views.adminPage, name="adminPage"),
@@ -36,7 +36,8 @@
     # path("admin/crosswordList/<int:crossword_id>/delete/", views.AdminCrosswordDelete, name="AdminCrosswordDeletePage"),
     path("admin/userList", views.AdminUserListPage, name="AdminUserListPage"),
     # path("admin/userList/<int:user_id>/", views.AdminUserListPage, name="AdminUserListPage"),
-    path("admin/modifyUserRequest/<str:username>/", views.ProcessModifyUserRequest, name="ProcessModifyUserRequest"),
+    path("admin/modifyUserRequest/<username>/<email>/", views.changeDetails, name="ProcessModifyUserRequest"),
     path('forget_password/', views.forget_password, name='forget_password'),
     path('change-password/<token>/<email>/', views.ChangePassword, name="change_password"),
+    path('puzzle_of_day',views.puzzle_of_day, name='puzzle_of_day'),
 ]
Index: IT314_Project_20/crosswordApp/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render\r\nfrom pymongo import MongoClient\r\nfrom django.http import HttpResponse\r\nfrom django.shortcuts import render, redirect\r\nfrom django.template import loader\r\nfrom .Classes import User\r\n\r\nclient = MongoClient('mongodb+srv://Group20:Group20@cluster0.fi05hgc.mongodb.net/test')\r\ndb = client['CrossWordManagement']\r\n\r\n\r\ndef SignupPage(request):\r\n    collections = db['crosswordApp_user']\r\n    if request.method == 'POST':\r\n        uname = request.POST.get('username')\r\n        email = request.POST.get('email')\r\n        pass1 = request.POST.get('password1')\r\n        pass2 = request.POST.get('password2')\r\n\r\n        if pass1 != pass2:\r\n            return HttpResponse(\"Your password and confrom password are not Same!!\")\r\n        else:\r\n\r\n            new_user = User.User(uname, email, pass1)\r\n            collections.insert_one(new_user.__dict__)\r\n\r\n            return redirect('login')\r\n\r\n    return render(request, 'signup.html')\r\n\r\n\r\ndef LoginPage(request):\r\n    collections = db['crosswordApp_user']\r\n    if request.method == 'POST':\r\n        username = request.POST.get('username')\r\n        pass1 = request.POST.get('pass')\r\n        # user = authenticate(request, username=username, password=pass1)\r\n        reply = collections.find_one({\"username\": username})\r\n        if reply is not None:\r\n            if reply[\"password\"] == pass1:\r\n                request.session['username'] = username\r\n                return redirect('home')\r\n            else:\r\n                template = loader.get_template(\"login.html\")\r\n                context = {\r\n                    \"fail\": True,\r\n                }\r\n                return HttpResponse(template.render(context, request))\r\n        else:\r\n            template = loader.get_template(\"login.html\")\r\n            context = {\r\n                \"fail\": True,\r\n            }\r\n            return HttpResponse(template.render(context, request))\r\n    return render(request, 'login.html')\r\n\r\n\r\ndef create_crossword(request):\r\n    return render(request, \"create_crossword_automatic.html\")\r\n\r\n\r\ndef crossword_list_view(request):\r\n    return render(request, \"sample.html\")\r\n\r\n\r\ndef create_crossword_automatic(request):\r\n    return render(request, \"create_crossword_automatic.html\")\r\n\r\n\r\ndef create_crossword_manual(request):\r\n    user = request.session.get('username')\r\n\r\n    print(\"Current User: \", user)\r\n\r\n    context = {\r\n        \"Username\": user,\r\n    }\r\n    return render(request, \"create_crossword_manual.html\", context)\r\n\r\n\r\ndef creation(request):\r\n    return render(request, \"creation.html\")\r\n\r\n\r\ndef home(request):\r\n    print(request.session.get('username'))\r\n\r\n    userpresent = True\r\n\r\n    if request.session.get('username') is None:\r\n        userpresent = False\r\n\r\n    context = {\r\n        \"username\": request.session.get('username'),\r\n        \"userpresent\": userpresent,\r\n    }\r\n    return HttpResponse(render(request, \"home.html\", context))\r\n\r\n\r\ndef logout(request):\r\n    request.session.flush()\r\n    context = {\r\n        \"username\": None,\r\n        \"userpresent\": False,\r\n    }\r\n    # redirect('')\r\n    return HttpResponse(render(request, \"home.html\", context))\r\n\r\n\r\ndef creatorProfile(request):\r\n    return render(request, \"creatorProfile.html\")\r\n\r\n\r\ndef adminPage(request):\r\n    return render(request, \"Admin/admin.html\")\r\n\r\n\r\ndef AdminUserListPage(request):\r\n    users = db['crosswordApp_user'].find({})\r\n\r\n    users = list(users)\r\n    print(users)\r\n    context = {\r\n        \"Users\": users,\r\n    }\r\n    return render(request, \"Admin/userlist.html\", context)\r\n\r\n\r\ndef AdminCrosswordListPage(request):\r\n    return render(request, \"Admin/crosswordlist.html\")\r\n\r\n\r\ndef AdminModifyCrosswordPage(request):\r\n    return render(request, \"Admin/modify_crossword.html\")\r\n\r\n\r\ndef ProcessModifyUserRequest(request, username):\r\n    print('Processing Modify User Request for user: ', username)\r\n\r\n    collections = db['crosswordApp_user']\r\n\r\n    reply = collections.find_one({\"username\": username})\r\n    print(reply)\r\n    if reply is not None:\r\n        context = {\r\n            \"user\": reply,\r\n        }\r\n        return render(request, \"Admin/modify_user.html\", context)\r\n\r\n    return render(request, \"Admin/modify_user.html\")\r\n\r\n\r\ndef forget_password(request):\r\n    collections = db['crosswordApp_user']\r\n    if request.method == 'POST':\r\n        email = request.POST.get('email')\r\n        reply = collections.find_one({\"email\": email})\r\n        if reply is not None:\r\n            token = str(uuid.uuid4())\r\n            subject = 'Your forget password link'\r\n            mssg = f'Hi , click on the link to reset your password http://127.0.0.1:8000/change-password/{token}/'\r\n            send_mail(email, subject, mssg)\r\n            messages.success(request, 'An email is sent.')\r\n            return redirect(\"/forget_password/\")\r\n\r\n    return render(request, 'forget_password.html')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IT314_Project_20/crosswordApp/views.py b/IT314_Project_20/crosswordApp/views.py
--- a/IT314_Project_20/crosswordApp/views.py	(revision 2f96f6fc5d5466e2e669cee721544020e720b120)
+++ b/IT314_Project_20/crosswordApp/views.py	(date 1682072258568)
@@ -1,11 +1,13 @@
+from django.contrib import messages
 from django.shortcuts import render
 from pymongo import MongoClient
 from django.http import HttpResponse
 from django.shortcuts import render, redirect
 from django.template import loader
 from .Classes import User
-
-client = MongoClient('mongodb+srv://Group20:Group20@cluster0.fi05hgc.mongodb.net/test')
+from .helper import send_mail
+import uuid
+client = MongoClient('mongodb+srv://Group20:g7uxB5fMdWcstCt4@cluster0.zjgczqo.mongodb.net/?retryWrites=true&w=majority')
 db = client['CrossWordManagement']
 
 
@@ -134,20 +136,32 @@
     return render(request, "Admin/modify_crossword.html")
 
 
-def ProcessModifyUserRequest(request, username):
+def ProcessModifyUserRequest(request, username,email):
     print('Processing Modify User Request for user: ', username)
 
     collections = db['crosswordApp_user']
-
     reply = collections.find_one({"username": username})
+    if request.method == 'POST':
+        name=request.POST.get('username')
+        em=request.POST.get('email')
+        prev1={"email":email}
+        nexxt1={"$set":{"email":em}}
+        collections.update_one(prev1, nexxt1)
+        prev2={"username":username}
+        nexxt2={"$set":{"username":name}}
+        collections.update_one(prev2, nexxt2)
+        return redirect('login')
+
+
+
     print(reply)
     if reply is not None:
         context = {
             "user": reply,
         }
-        return render(request, "Admin/modify_user.html", context)
+        return render(request, f"Admin/modify_user.html", context)
 
-    return render(request, "Admin/modify_user.html")
+    return render(request, f"Admin/modify_user.html")
 
 
 def forget_password(request):
@@ -158,9 +172,43 @@
         if reply is not None:
             token = str(uuid.uuid4())
             subject = 'Your forget password link'
-            mssg = f'Hi , click on the link to reset your password http://127.0.0.1:8000/change-password/{token}/'
+            mssg = f'Hi , click on the link to reset your password http://127.0.0.1:8000/change-password/{token}/{email}/'
             send_mail(email, subject, mssg)
             messages.success(request, 'An email is sent.')
             return redirect("/forget_password/")
 
     return render(request, 'forget_password.html')
+def ChangePassword(request, token,email):
+    collections = db['crosswordApp_user']
+
+    if request.method == 'POST':
+        pass1 = request.POST.get('new_password')
+        pass2 = request.POST.get('reconfirm_password')
+        if pass1 != pass2:
+            messages.success(request, 'both should  be equal.')
+            return redirect(f'/change-password/{token}/{email}/')
+        # rely = collections.find_one({"email":email})
+        prev={"email":email}
+        nexxt={"$set":{"password":pass1}}
+        collections.update_one(prev,nexxt)
+        return redirect('login')
+
+    return render(request, 'change-password.html')
+
+def changeDetails(request, username, email):
+    collections = db['crosswordApp_user']
+    if request.method == 'POST':
+        changename = request.POST.get('new_username')
+        changeemail = request.POST.get('new_email')
+        prev={"email":email}
+        nexxt={"$set":{"email":changeemail}}
+        collections.update_one(prev,nexxt)
+        prev1={"username":username}
+        nexxt1={"$set":{"username":changename}}
+        collections.update_one(prev1,nexxt1)
+        return redirect('login')
+
+    return render(request, f"Admin/modify_user.html")
+
+def puzzle_of_day(request):
+    return render(request,'puzzle_of_day.html')
\ No newline at end of file
Index: IT314_Project_20/crosswordApp/helper.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.core.mail import send_mail\r\nfrom datetime import datetime\r\nfrom django.utils import timezone\r\n\r\nfrom django.http import HttpResponse\r\nfrom django.template import loader\r\nfrom django.shortcuts import render\r\n\r\n\r\nimport smtplib\r\nfrom email.mime.multipart import MIMEMultipart\r\nfrom email.mime.text import MIMEText\r\n\r\n\r\nfrom django.conf import settings\r\ndef send_forget_password_mail(email , token ):\r\n    subject = 'Your forget password link'\r\n    message = f'Hi , click on the link to reset your password http://127.0.0.1:8000/change-password/{token}/'\r\n    email_from = settings.EMAIL_HOST_USER\r\n    recipient_list = [email]\r\n    send_mail(subject, message, email_from, recipient_list)\r\n    return True\r\n\r\ndef send_mail(receiver_address, subject, mail_content):\r\n    sender_address = 'crosswordmanagement@gmail.com'  # add sender's email address here\r\n    sender_pass = 'zkgxfsduhuvebiki'  # add sender's passsword address here\r\n\r\n    message = MIMEMultipart()\r\n    message['From'] = sender_address\r\n    message['To'] = receiver_address\r\n    message['Subject'] = subject\r\n\r\n    message.attach(MIMEText(mail_content, 'plain'))\r\n\r\n    session = smtplib.SMTP('smtp.gmail.com', 587)\r\n    session.starttls()\r\n    session.login(sender_address, sender_pass)\r\n    text = message.as_string()\r\n    session.sendmail(sender_address, receiver_address, text)\r\n    session.quit()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IT314_Project_20/crosswordApp/helper.py b/IT314_Project_20/crosswordApp/helper.py
--- a/IT314_Project_20/crosswordApp/helper.py	(revision 2f96f6fc5d5466e2e669cee721544020e720b120)
+++ b/IT314_Project_20/crosswordApp/helper.py	(date 1681726496906)
@@ -6,14 +6,14 @@
 from django.template import loader
 from django.shortcuts import render
 
-
 import smtplib
 from email.mime.multipart import MIMEMultipart
 from email.mime.text import MIMEText
 
-
 from django.conf import settings
-def send_forget_password_mail(email , token ):
+
+
+def send_forget_password_mail(email, token):
     subject = 'Your forget password link'
     message = f'Hi , click on the link to reset your password http://127.0.0.1:8000/change-password/{token}/'
     email_from = settings.EMAIL_HOST_USER
@@ -21,6 +21,7 @@
     send_mail(subject, message, email_from, recipient_list)
     return True
 
+
 def send_mail(receiver_address, subject, mail_content):
     sender_address = 'crosswordmanagement@gmail.com'  # add sender's email address here
     sender_pass = 'zkgxfsduhuvebiki'  # add sender's passsword address here
@@ -37,4 +38,33 @@
     session.login(sender_address, sender_pass)
     text = message.as_string()
     session.sendmail(sender_address, receiver_address, text)
-    session.quit()
\ No newline at end of file
+    session.quit()
+
+
+import uuid
+import datetime
+
+import bson
+
+
+class User:
+    id: uuid
+    username = ""
+    email = ""
+    password = ""
+
+    def __init__(self, username, email, password):
+        # unique_id = uuid.uuid4()
+
+        # print("unique_id: " + str(unique_id))
+        # self.id = unique_id
+        self.username = username
+        self.email = email
+        self.password = password
+
+        self.dateOfJoining = datetime.datetime.now()
+
+        # print("")
+
+    def __str__(self):
+        return f"User: {self.username}"
Index: IT314_Project_20/templates/Admin/userlist.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n{% load static %}\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Admin Dashboard</title>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"{% static \"AdminPage/style_1.css\" %}\">\r\n</head>\r\n\r\n<body>\r\n    <h1>Admin Dashboard</h1>\r\n    <h2>User List</h2>\r\n    <table id=\"user-list\">\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Action</th>\r\n        </tr>\r\n        {% for User in Users %}\r\n            <tr>\r\n                <td>{{ User.username }}</td>\r\n                <td>{{ User.email }}</td>\r\n                <td>\r\n                    <button class=\"modify-btn\" onclick=\"window.location.href='modifyUserRequest/{{ User.username }}/'\">Modify</button>\r\n{#                    <script>#}\r\n{#                        function redirectToModifyPageUser() {#}\r\n{#                            window.location.href = \"modify_user.html\";#}\r\n{#                        }#}\r\n{#                    </script>#}\r\n                    <button class=\"delete-btn\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        {% endfor %}\r\n{#        <tr>#}\r\n{#            <td>1</td>#}\r\n{#            <td>John Doe</td>#}\r\n{#            <td>john.doe@example.com</td>#}\r\n{#            <td>#}\r\n{#                <button class=\"modify-btn\" onclick=\"redirectToModifyPageUser()\">Modify</button>#}\r\n{#                <script>#}\r\n{#                    function redirectToModifyPageUser() {#}\r\n{#                        window.location.href = \"modify_user.html\";#}\r\n{#                    }#}\r\n{#                </script>#}\r\n{#                <button class=\"delete-btn\">Delete</button>#}\r\n{#            </td>#}\r\n{#        </tr>#}\r\n\r\n\r\n    </table>\r\n\r\n\r\n</body>\r\n\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IT314_Project_20/templates/Admin/userlist.html b/IT314_Project_20/templates/Admin/userlist.html
--- a/IT314_Project_20/templates/Admin/userlist.html	(revision 2f96f6fc5d5466e2e669cee721544020e720b120)
+++ b/IT314_Project_20/templates/Admin/userlist.html	(date 1681804311905)
@@ -23,12 +23,12 @@
                 <td>{{ User.username }}</td>
                 <td>{{ User.email }}</td>
                 <td>
-                    <button class="modify-btn" onclick="window.location.href='modifyUserRequest/{{ User.username }}/'">Modify</button>
-{#                    <script>#}
-{#                        function redirectToModifyPageUser() {#}
-{#                            window.location.href = "modify_user.html";#}
-{#                        }#}
-{#                    </script>#}
+                    <button class="modify-btn" onclick="redirectToModifyPageUser()">Modify</button>
+                    <script>
+                        function redirectToModifyPageUser() {
+                            window.location.href = "/admin/modifyUserRequest/{{ User.username }}/{{ User.email }}/";
+                        }
+                    </script>
                     <button class="delete-btn">Delete</button>
                 </td>
             </tr>
Index: IT314_Project_20/templates/Admin/modify_user.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <title>Modify User </title>\r\n    <!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"> -->\r\n    <style>\r\n        /* Reset default margin and padding */\r\n        body,\r\n        table {\r\n            margin: 0;\r\n            padding: 0;\r\n            font-family: Arial, sans-serif;\r\n        }\r\n\r\n        /* Style for h1 and h2 headings */\r\n        h1,\r\n        h2 {\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            margin-bottom: 10px;\r\n            color: #333;\r\n            text-align: center;\r\n        }\r\n\r\n        /* Style for form */\r\n        form {\r\n            max-width: 500px;\r\n            margin: 0 auto;\r\n            padding: 20px;\r\n            background-color: #f2f2f2;\r\n            border: 1px solid #ddd;\r\n            border-radius: 5px;\r\n        }\r\n\r\n        /* Style for labels */\r\n        label {\r\n            display: block;\r\n            margin-bottom: 10px;\r\n            color: #333;\r\n        }\r\n\r\n        /* Style for input fields */\r\n        input[type=\"text\"],\r\n        input[type=\"email\"],\r\n        select {\r\n            width: 100%;\r\n            padding: 8px;\r\n            margin-bottom: 10px;\r\n            border: 1px solid #ddd;\r\n            border-radius: 3px;\r\n            color: #777;\r\n        }\r\n\r\n        /* Style for submit button */\r\n        input[type=\"submit\"] {\r\n            background-color: #007bff;\r\n            color: #fff;\r\n            border: none;\r\n            padding: 10px;\r\n            cursor: pointer;\r\n        }\r\n\r\n        /* Hover effect for submit button */\r\n        input[type=\"submit\"]:hover {\r\n            opacity: 0.8;\r\n        }\r\n\r\n        /* Style for container */\r\n        .container {\r\n            max-width: 1200px;\r\n            margin: 0 auto;\r\n            padding: 20px;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <h1>Modify User: {{ user.username }}</h1>\r\n    <form id=\"modify-user-form\" method=\"post\">\r\n        {% csrf_token %}\r\n{#        <label for=\"user-id\">ID:</label>#}\r\n{#        <input type=\"text\" id=\"user-id\" name=\"user-id\" value=\"{{ user.username }}\" readonly>#}\r\n        <label for=\"user-name\">Name:</label>\r\n        <input type=\"text\" id=\"user-name\" name=\"user-name\" value=\"{{ user.username }}\">\r\n        <label for=\"user-email\">Email:</label>\r\n        <input type=\"email\" id=\"user-email\" name=\"user-email\" value=\"{{ user.email }}\">\r\n        <input type=\"submit\" value=\"Save\">\r\n    </form>\r\n\r\n</body>\r\n\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/IT314_Project_20/templates/Admin/modify_user.html b/IT314_Project_20/templates/Admin/modify_user.html
--- a/IT314_Project_20/templates/Admin/modify_user.html	(revision 2f96f6fc5d5466e2e669cee721544020e720b120)
+++ b/IT314_Project_20/templates/Admin/modify_user.html	(date 1681804052041)
@@ -82,10 +82,11 @@
 {#        <label for="user-id">ID:</label>#}
 {#        <input type="text" id="user-id" name="user-id" value="{{ user.username }}" readonly>#}
         <label for="user-name">Name:</label>
-        <input type="text" id="user-name" name="user-name" value="{{ user.username }}">
+        <input type="text" id="user-name" name="new_username" value="{{ user.username }}">
         <label for="user-email">Email:</label>
-        <input type="email" id="user-email" name="user-email" value="{{ user.email }}">
+        <input type="email" id="user-email" name="new_email" value="{{ user.email }}">
         <input type="submit" value="Save">
+{#        <input type="date" value="{{ User.dateOfJoining }}">#}
     </form>
 
 </body>
